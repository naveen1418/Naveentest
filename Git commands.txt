 git config --global user.email "nkunchupu@gmail.com"
 git config --global user.name "Naveen1418"


nkunc@DESKTOP-TLML29K MINGW64 /c/Devops/MyProject (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        test1xt.txt

nothing added to commit but untracked files present (use "git add" to track)

nkunc@DESKTOP-TLML29K MINGW64 /c/Devops/MyProject (master)
$ git add test1.txt
fatal: pathspec 'test1.txt' did not match any files

nkunc@DESKTOP-TLML29K MINGW64 /c/Devops/MyProject (master)
$ git commit -m "added test.txt"

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'nkunc@DESKTOP-TLML29K.(none)')

nkunc@DESKTOP-TLML29K MINGW64 /c/Devops/MyProject (master)
$  git config --global user.email "you@example.com"

nkunc@DESKTOP-TLML29K MINGW64 /c/Devops/MyProject (master)
$   git config --global user.name "Your Name"

nkunc@DESKTOP-TLML29K MINGW64 /c/Devops/MyProject (master)
$  git config --global user.email "naveen1418@gmail.com"

nkunc@DESKTOP-TLML29K MINGW64 /c/Devops/MyProject (master)
$   git config --global user.name "Naveen"

nkunc@DESKTOP-TLML29K MINGW64 /c/Devops/MyProject (master)
$  git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        test1xt.txt

nothing added to commit but untracked files present (use "git add" to track)

nkunc@DESKTOP-TLML29K MINGW64 /c/Devops/MyProject (master)
$ git commit -m "added tested"
On branch master

Initial commit

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        test1xt.txt

nothing added to commit but untracked files present (use "git add" to track)

nkunc@DESKTOP-TLML29K MINGW64 /c/Devops/MyProject (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        test1xt.txt

nothing added to commit but untracked files present (use "git add" to track)

nkunc@DESKTOP-TLML29K MINGW64 /c/Devops/MyProject (master)
$ git add test1xt.txt

nkunc@DESKTOP-TLML29K MINGW64 /c/Devops/MyProject (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   test1xt.txt


nkunc@DESKTOP-TLML29K MINGW64 /c/Devops/MyProject (master)
$ git commit -m "added test"
[master (root-commit) 1d7f71c] added test
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 test1xt.txt

nkunc@DESKTOP-TLML29K MINGW64 /c/Devops/MyProject (master)
$ git status
On branch master
nothing to commit, working tree clean

nkunc@DESKTOP-TLML29K MINGW64 /c/Devops/MyProject (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   test1xt.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        test2.html.txt

no changes added to commit (use "git add" and/or "git commit -a")

nkunc@DESKTOP-TLML29K MINGW64 /c/Devops/MyProject (master)
$ git add .

nkunc@DESKTOP-TLML29K MINGW64 /c/Devops/MyProject (master)
$ git commit -m "added 2 files"
[master a4f8416] added 2 files
 2 files changed, 1 insertion(+)
 create mode 100644 test2.html.txt

nkunc@DESKTOP-TLML29K MINGW64 /c/Devops/MyProject (master)
$ git status
On branch master
nothing to commit, working tree clean

nkunc@DESKTOP-TLML29K MINGW64 /c/Devops/MyProject (master)
$ git remote add origin https://github.com/naveen1418/Naveentest.git

nkunc@DESKTOP-TLML29K MINGW64 /c/Devops/MyProject (master)
$ git push -u origin master
Enumerating objects: 6, done.
Counting objects: 100% (6/6), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (6/6), 460 bytes | 460.00 KiB/s, done.
Total 6 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/naveen1418/Naveentest.git
 * [new branch]      master -> master
Branch 'master' set up to track remote branch 'master' from 'origin'.

nkunc@DESKTOP-TLML29K MINGW64 /c/Devops/MyProject (master)
$

nkunc@DESKTOP-TLML29K MINGW64 /c/Devops/MyProject (master)
$  git config --global user.email "nkunchupu@gmail.com"

nkunc@DESKTOP-TLML29K MINGW64 /c/Devops/MyProject (master)
$ git config --global user.name "Naveen1418"

nkunc@DESKTOP-TLML29K MINGW64 /c/Devops/MyProject (master)
$ git log
commit a4f841648f46aa2679ec4a5025dbd13d231571e1 (HEAD -> master, origin/master)
Author: Naveen <naveen1418@gmail.com>
Date:   Mon Jul 20 15:25:29 2020 +0100

    added 2 files

commit 1d7f71cb60419ed131b98910d925a133cb162d45
Author: Naveen <naveen1418@gmail.com>
Date:   Mon Jul 20 15:22:51 2020 +0100

    added test

nkunc@DESKTOP-TLML29K MINGW64 /c/Devops/MyProject (master)
$ git --help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

nkunc@DESKTOP-TLML29K MINGW64 /c/Devops/MyProject (master)
$
